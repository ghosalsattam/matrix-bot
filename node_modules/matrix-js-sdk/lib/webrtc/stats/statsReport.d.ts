import { ConnectionStatsBandwidth, ConnectionStatsBitrate, PacketLoos } from "./connectionStats";
import { TransportStats } from "./transportStats";
import { Resolution } from "./media/mediaTrackStats";
export declare enum StatsReport {
    CONNECTION_STATS = "StatsReport.connection_stats",
    BYTE_SENT_STATS = "StatsReport.byte_sent_stats"
}
export type TrackID = string;
export type ByteSend = number;
export interface ByteSentStatsReport extends Map<TrackID, ByteSend> {
}
export interface ConnectionStatsReport {
    bandwidth: ConnectionStatsBandwidth;
    bitrate: ConnectionStatsBitrate;
    packetLoss: PacketLoos;
    resolution: ResolutionMap;
    framerate: FramerateMap;
    codec: CodecMap;
    transport: TransportStats[];
}
export interface ResolutionMap {
    local: Map<TrackID, Resolution>;
    remote: Map<TrackID, Resolution>;
}
export interface FramerateMap {
    local: Map<TrackID, number>;
    remote: Map<TrackID, number>;
}
export interface CodecMap {
    local: Map<TrackID, string>;
    remote: Map<TrackID, string>;
}
//# sourceMappingURL=statsReport.d.ts.map